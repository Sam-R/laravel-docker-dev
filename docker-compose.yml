version: "3"

services:
  # Nginx web server
  nginx:
    image: nginx:stable-alpine
    container_name: nginx-dev
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  # MySQL database server
  mysql:
    image: mysql:5.7
    container_name: mysql-dev
    restart: unless-stopped
    tty: true
    ports:
      - "33060:3306"
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  # Custom PHP image for Laravel
  php:
    build:
      context: .
      dockerfile: ./.docker/Dockerfile.app
    container_name: php-dev
    volumes:
      - ./src:/var/www/html
      # Load a custom PHP.ini file
      #- ./.docker/php/php.ini:/usr/local/etc/php/php.ini
    #command: ip -4 route list match 0/0 | awk '{print $$3" host.docker.internal"}' >> /etc/hosts
    networks:
      - laravel

  # Redis, for caching and queues (Optional)
  redis:
    image: redis:5-alpine
    container_name: redis-dev
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel

  # Laravel Horizion (Optional)
  horizon:
    build:
      context: .
      dockerfile: ./.docker/Dockerfile.app
    container_name: horizon-dev
    restart: unless-stopped
    command: /bin/bash -c 'while [ 0 -lt 1 ] ; do  /var/www/html/artisan horizon; sleep 60; done'
    networks:
      - laravel
    volumes:
      - ./src:/var/www/html

  # Laravel Scheduler (Optional)
  scheduler:
    build:
      context: .
      dockerfile: ./.docker/Dockerfile.app
    container_name: scheduler-dev
    restart: unless-stopped
    command: /bin/bash -c 'while [ 0 -lt 1 ] ; do  /var/www/html/artisan schedule:run >> /dev/null 2>&1 ; sleep 60; done'
    networks:
      - laravel
    volumes:
      - ./src:/var/www/html

  # Default Queue Worker (Optional)
  worker-default:
    build:
      context: .
      dockerfile: ./.docker/Dockerfile.app
    container_name: worker-default-dev
    restart: unless-stopped
    command: /bin/bash -c 'while [ 0 -lt 1 ] ; do  /var/www/html/artisan queue:work --tries=3 --timeout=90 --sleep=60; done'
    networks:
      - laravel
    volumes:
      - ./src:/var/www/html

  # Mailhug (Optional, mail-catcher)
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog-dev
    networks:
      - laravel
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

networks:
  # A network for the laravel containers
  laravel:
# Persist the MySQL data somewhere sensible
# volumes:
#     mysql_data:
